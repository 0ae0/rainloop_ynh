# Exit on command errors and treat unset variables as an error
set -eu
app=$YNH_APP_INSTANCE_NAME

# Retrieve arguments
	domain=$1
	path=${2%/}
	is_public=$3
	password=$4
	ldap=$5
	lang=$6

# Source app helpers
. /usr/share/yunohost/helpers

# Check domain/path availability
	sudo yunohost app checkurl "${domain}${path}" -a "$app" \
	|| exit 1

# Use 'rainloop' as database name and user
	dbuser=$app
	dbname=$app
	dbpass=$(ynh_string_random)

# Initialize database and store mysql password for upgrade
	ynh_mysql_create_db "$dbname" "$dbuser" "$dbpass"
	ynh_app_setting_set "$app" mysqlpwd "$dbpass"

# Create the final path and copy sources
	final_path=/var/www/$app
	rainloop_path=${final_path}/app

	sudo rm -rf $final_path
	sudo mkdir -p $final_path
	sudo mkdir -p $rainloop_path

	# Use of latest community edition
	sudo wget -q https://github.com/RainLoop/rainloop-webmail/releases/download/v1.10.2.145/rainloop-community-1.10.2.145-74dc686dd82d9f29b0fef8ceb11c2903.zip
	#Check checksum
	sudo unzip -qq rainloop-community-1.10.2.*.zip -d $rainloop_path/
	
	# Install plugins
	sudo mkdir -p $rainloop_path/data/_data_/_default_/plugins
	sudo cp -rf ../sources/plugins/ynh-login-mapping $rainloop_path/data/_data_/_default_/plugins/.
	sudo cp -rf ../sources/plugins/ynh-ldap-suggestions $rainloop_path/data/_data_/_default_/plugins/.

# Autoconfig
	sudo mkdir -p $rainloop_path/data/_data_/_default_/configs/
	application_file=$rainloop_path/data/_data_/_default_/configs/application.ini

	# Set lang => define from install manifest
	case "$lang" in
        Francais)
            lang="fr"
            ;;
        English)
            lang="en"
            ;;
        *)
            lang="en"
	esac
	
	
	# Set plugins
	plugins="ynh-login-mapping"
	if [ "$ldap" = "Yes" ];
	then
		plugins="$plugins,ynh-ldap-suggestions"
	fi
	ynh_app_setting_set "$app" plugins "$plugins"
	
	sudo cp ../conf/data/configs/application.ini $application_file
	sudo sed -i "s@domain.tld@$domain@g"         $application_file
	sudo sed -i "s@MYSQLUSER@$dbuser@g"         $application_file
	sudo sed -i "s@MYSQLPASSWORD@$dbpass@g"      $application_file
	sudo sed -i "s@LANGTOCHANGE@$lang@g"         $application_file
	sudo sed -i "s@PLUGINSTOENABLE@$plugins@g"   $application_file

# Set admin password
	sudo php ../conf/config.php --index="$rainloop_path/index.php" --password="$password"

# Add default domain configs by looping through all the domains already added
	sudo mkdir -p $rainloop_path/data/_data_/_default_/domains/

	# get list of ldap domains
	alldomains=`ldapsearch -LLL -x -b ou=domains,dc=yunohost,dc=org -s one "objectclass=top" virtualdomain | grep -v "dn:" | sed "s/virtualdomain://" `
	for ldomain in $alldomains ; do
		sudo cp ../conf/data/domains/domain.tld.ini $rainloop_path/data/_data_/_default_/domains/$ldomain.ini
	done
	sudo cp ../conf/data/domains/disabled $rainloop_path/data/_data_/_default_/domains/disabled

# Hooks for domains are not implemented yet, so new domains will not be added automatically

# install SSO and auto version - at the moment the index is the SSO and rainloop is installed in /app
	sudo cp ../sources/sso/sso.php                  $final_path/index.php
	sudo cp ../sources/patch/index_auto_version.php $rainloop_path/index.php
	sudo sed -i "s@domain.tld@$domain@g"  $final_path/index.php
	sudo sed -i "s@PATHTOCHANGE@$path@g"  $final_path/index.php

# Set permissions to rainloop directory
	sudo find $final_path/. -type d -exec chmod 755 {} \;
	sudo find $final_path/. -type f -exec chmod 644 {} \;
	sudo chown -R www-data:www-data $final_path

# Install Nginx configuration file
	nginx_conf_file=/etc/nginx/conf.d/$domain.d/$app.conf
	sudo cp ../conf/nginx.conf $nginx_conf_file
	sudo sed -i "s@PATHTOCHANGE@$path@g"         $nginx_conf_file
	sudo sed -i "s@ALIASTOCHANGE@$final_path/@g" $nginx_conf_file
	sudo sed -i "s@NAMETOCHANGE@$app@g"          $nginx_conf_file
	sudo chown root:                             $nginx_conf_file
	sudo chmod 644                               $nginx_conf_file

	finalphpconf=/etc/php5/fpm/pool.d/$app.conf
	sudo cp ../conf/php-fpm.conf        $finalphpconf
	sudo sed -i "s@NAMETOCHANGE@$app@g" $finalphpconf
	sudo chown root:                    $finalphpconf
	sudo chmod 644                      $finalphpconf

# Make app public if necessary
	ynh_app_setting_set "$app" is_public "$is_public"
	if [ "$is_public" = "Yes" ];
	then
		ynh_app_setting_set "$app" skipped_uris "/"
	fi

# Reload services
	sudo service php5-fpm restart || true
	sudo service nginx reload || true
